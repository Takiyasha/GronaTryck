<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Gröna Tryck</title>
    <link rel="stylesheet" href="/static/styles.css" />
    <link rel="stylesheet" href="/static/popup.css" />
  </head>
  <header><%- include('partials/navbar') %></header>
  <body>
    <div class="store-container">
      <div class="progress-section">
        <a href="/index">Hem</a> <span>/</span> <a href="/butik">Butik</a>
        <span>/</span> <a href="/klader">Kläder</a>
      </div>
      <div class="text-block">
        <h2 class="heading-m">Kläder</h2>
        <p class="body-text">
          Under vår klädkategori hittar du alltid ett brett sortiment av
          ekologiska och kvalitativa produkter.
        </p>
      </div>
      <p class="heading-s" id="categorieDropdown">Kategorier</p>
      <div class="store-categories-container" id="categoriesContainer"></div>
      <div class="store-container-filtering">
        <span>
          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 800 800">
            <path
              d="M764 481.19h-46.31c-6.44-38.75-40.2-68.38-80.75-68.38s-74.3 29.63-80.74 68.38H36c-10.36 0-18.75 8.39-18.75 18.75s8.39 18.75 18.75 18.75h522.68c10.27 33.46 41.47 57.86 78.26 57.86s68-24.4 78.27-57.86H764c10.36 0 18.75-8.4 18.75-18.75s-8.39-18.75-18.75-18.75Zm-127.06 57.86c-15.62 0-29.38-8.12-37.28-20.36a44.049 44.049 0 0 1-7.08-24.01c0-4.7.74-9.24 2.1-13.49 5.72-17.89 22.5-30.88 42.26-30.88s36.55 12.99 42.27 30.88c1.37 4.25 2.1 8.79 2.1 13.49 0 8.84-2.6 17.09-7.08 24.01-7.9 12.24-21.66 20.36-37.29 20.36ZM36 329.33h59.81c10.27 33.46 41.47 57.86 78.27 57.86s67.99-24.4 78.26-57.86H764c10.36 0 18.75-8.39 18.75-18.75s-8.39-18.75-18.75-18.75H254.82c-6.44-38.75-40.2-68.38-80.74-68.38s-74.31 29.63-80.75 68.38H36c-10.36 0-18.75 8.4-18.75 18.75s8.39 18.75 18.75 18.75Zm138.08-68.38c19.76 0 36.54 12.99 42.26 30.88 1.36 4.26 2.1 8.79 2.1 13.49 0 8.84-2.6 17.09-7.07 24.01-7.91 12.24-21.67 20.36-37.29 20.36s-29.39-8.12-37.3-20.36a44.125 44.125 0 0 1-7.07-24.01c0-4.7.73-9.23 2.1-13.49 5.72-17.89 22.5-30.88 42.27-30.88Z"
              style="fill: #052900"
            />
          </svg>
          <p class="heading-s">Filtera</p>
        </span>
        <p class="heading-s">Sortera efter</p>
      </div>
    </div>
    <div class="filter-sidebar" id="filterSidebar">
      <div class="filter-header">
        <h2 class="heading-m">Filtrera</h2>
        <svg
          xmlns="http://www.w3.org/2000/svg"
          viewBox="0 0 800 800"
          width="22"
          height="22"
          id="closeFilterSidebar"
        >
          <path
            d="M453.77 400.01 781.88 80.58c14.84-14.45 15.16-38.19.71-53.03-14.45-14.84-38.19-15.16-53.03-.71L400.02 347.68 70.47 26.84c-14.84-14.45-38.58-14.13-53.03.71-14.45 14.84-14.13 38.58.71 53.03l328.1 319.44-328.1 319.43c-14.84 14.45-15.16 38.19-.71 53.03 7.35 7.55 17.11 11.34 26.87 11.34s18.87-3.53 26.16-10.63l329.54-320.84 329.54 320.84c7.29 7.1 16.73 10.63 26.16 10.63s19.52-3.79 26.87-11.34c14.45-14.84 14.13-38.58-.71-53.03l-328.1-319.44Z"
            style="fill: #567c50"
          />
        </svg>
      </div>
      <div class="filter-content">
        <!-- Price Filter -->
        <div class="filter-section">
          <h2 class="heading-s">Pris</h2>
          <div class="price-inputs">
            <input
              type="number"
              placeholder="Från"
              min="0"
              id="minPriceInput"
            />
            <input
              type="number"
              placeholder="Till"
              min="0"
              id="maxPriceInput"
            />
          </div>
        </div>

        <!-- Color Filter -->
        <div class="filter-section-color">
          <h2 class="heading-s">Färg</h2>
          <div class="color-grid">
            <button
              class="color-swatch"
              style="background-color: #ff4b4b"
              data-color="Red"
            ></button>
            <button
              class="color-swatch"
              style="background-color: #ffd700"
              data-color="Yellow"
            ></button>
            <button
              class="color-swatch"
              style="background-color: #90ee90"
              data-color="Green"
            ></button>
            <button
              class="color-swatch"
              style="background-color: #87ceeb"
              data-color="Blue"
            ></button>
            <button
              class="color-swatch"
              style="background-color: #deb887"
              data-color="Beige"
            ></button>
            <button
              class="color-swatch"
              style="background-color: #a0522d"
              data-color="Brown"
            ></button>
            <button
              class="color-swatch"
              style="background-color: #000000"
              data-color="Black"
            ></button>
            <button
              class="color-swatch"
              style="background-color: #ffffff; border: 1px solid #ccc"
              data-color="White"
            ></button>
            <button
              class="color-swatch"
              style="background-color: #808080"
              data-color="Gray"
            ></button>
          </div>
        </div>

        <!-- Fit Type Filter -->
        <div class="filter-section">
          <h2 class="heading-s">Passform</h2>
          <div class="fit-options">
            <% const fits = ["Dam", "Herr", "Unisex"]; %> <% fits.forEach(fit =>
            { %>
            <label class="fit-option">
              <input
                type="checkbox"
                name="fit"
                value="<%= fit.toLowerCase() %>"
              />
              <span><%= fit %></span>
            </label>
            <% }); %>
          </div>
        </div>
      </div>
    </div>

    <section>
      <div class="store-products-container" id="productsContainer">
        <% products.forEach((product) => { %>
        <div class="gt-product">
          <div class="gt-product-image">
            <a href="/produktsidan/<%= product.id %>">
              <img
                src="<%= product.model_image.image %>"
                alt="<%= product.name %>"
                class="gt-product-img"
              />
            </a>
          </div>
          <div class="gt-product-info">
            <p class="gt-product-price heading-s">
              <%= product.price_tiers.length > 0 ?
              `${product.price_tiers[product.price_tiers.length -
              1].price_per_unit} kr - ${product.price_tiers[0].price_per_unit}
              kr` : "Price unavailable" %>
            </p>
            <p class="gt-product-name body-text"><%= product.name %></p>
          </div>
          <div class="gt-product-extra-info">
            <p class="body-text"><%= product.fit %></p>
            <p class="body-text">Minimum: <%= product.minimum %></p>
            <p class="body-text"><%= product.egenskaper_info[2] %></p>
          </div>
        </div>
        <% }); %>
      </div>
      <div class="store-expand-btn">
        <button class="primary-btn" id="loadMoreButton">Visa mer</button>
      </div>
    </section>

    <%- include('partials/footer') %> <%- include('partials/chatbox') %>
    <script src="/static/script.js"></script>
    <script src="/static/login.js"></script>
    <script src="/static/signup.js"></script>
  </body>
  <script>
        // Get the elements
        const filterIcon = document.querySelector(".store-container-filtering svg");
        const filterSidebar = document.getElementById("filterSidebar");
        const closeFilterButton = document.getElementById("closeFilterSidebar");
        const storeContainer = document.querySelector(".store-container");

        // Function to toggle the filter sidebar
        function toggleFilterSidebar() {
          filterSidebar.classList.toggle("show");
          storeContainer.classList.toggle("push-right");
        }

        // Add click event listeners
        filterIcon.addEventListener("click", toggleFilterSidebar);
        closeFilterButton.addEventListener("click", toggleFilterSidebar);

        document.addEventListener("DOMContentLoaded", function () {
      // Elements for filters
      const colorButtons = document.querySelectorAll(".color-swatch");
      const priceInputs = document.querySelectorAll(".price-inputs input");
      const fitCheckboxes = document.querySelectorAll(".fit-option input");
      const productsContainer = document.getElementById("productsContainer");

      // Original products data for reference
      const products = <%- JSON.stringify(products) %>;

      // Apply filters
      function applyFilters() {
        let filteredProducts = [...products];

        // Filter by Color
        const selectedColorButton = document.querySelector(
          ".color-swatch.selected"
        );
        if (selectedColorButton) {
          const selectedColor = selectedColorButton.getAttribute("data-color");
          filteredProducts = filteredProducts.filter((product) =>
            product.products_images.some(
              (img) => img.simplified_color.toLowerCase() === selectedColor.toLowerCase()
            )
          );
        }

        // Filter by Price
        const minPrice = parseInt(priceInputs[0].value) || 0;
        const maxPrice = parseInt(priceInputs[1].value) || Infinity;
        filteredProducts = filteredProducts.filter((product) => {
          const lowestPrice = Math.min(
            ...product.price_tiers.map((tier) => tier.price_per_unit)
          );
          const highestPrice = Math.max(
            ...product.price_tiers.map((tier) => tier.price_per_unit)
          );
          return (
            (lowestPrice >= minPrice && lowestPrice <= maxPrice) ||
            (highestPrice >= minPrice && highestPrice <= maxPrice)
          );
        });

        // Filter by Fit Type
        const selectedFits = Array.from(fitCheckboxes)
          .filter((checkbox) => checkbox.checked)
          .map((checkbox) => checkbox.value);
        if (selectedFits.length > 0) {
          filteredProducts = filteredProducts.filter((product) =>
            selectedFits.includes(product.fit.toLowerCase())
          );
        }

        renderProducts(filteredProducts);
      }

      // Render products
      function renderProducts(products) {
        productsContainer.innerHTML = "";

        if (products.length === 0) {
          productsContainer.innerHTML = "<p>Inga produkter hittades.</p>";
          return;
        }

        products.forEach((product) => {
          const productHTML = `
            <div class="gt-product">
              <div class="gt-product-image">
                <a href="/produktsidan/${product.id}">
                  <img
                    src="${product.model_image.image}"
                    alt="${product.name}"
                    class="gt-product-img"
                  />
                </a>
              </div>
              <div class="gt-product-info">
                <p class="gt-product-price heading-s">
                  ${
                    product.price_tiers.length > 0
                      ? `${product.price_tiers[product.price_tiers.length - 1].price_per_unit} kr - ${product.price_tiers[0].price_per_unit} kr`
                      : "Price unavailable"
                  }
                </p>
                <p class="gt-product-name body-text">${product.name}</p>
              </div>
              <div class="gt-product-extra-info">
                <p class="body-text">${product.fit}</p>
                <p class="body-text">Minimum: ${product.minimum}</p>
                <p class="body-text">${product.egenskaper_info[2]}</p>
              </div>
            </div>
          `;
          productsContainer.insertAdjacentHTML("beforeend", productHTML);
        });
      }

      // Color filter event listener
      colorButtons.forEach((button) => {
        button.addEventListener("click", function () {
          colorButtons.forEach((btn) => btn.classList.remove("selected"));
          button.classList.add("selected");
          applyFilters();
        });
      });

      // Price filter event listener
      priceInputs.forEach((input) => {
        input.addEventListener("input", function () {
          applyFilters();
        });
      });

      // Fit type filter event listener
      fitCheckboxes.forEach((checkbox) => {
        checkbox.addEventListener("change", function () {
          applyFilters();
        });
      });
    });
  </script>
</html>
